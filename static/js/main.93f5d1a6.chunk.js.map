{"version":3,"sources":["components/JumboTron/JumboTron.jsx","components/Search/Search.jsx","containers/Home/Home.jsx","App.js","reportWebVitals.js","index.js"],"names":["JumboTron","className","Search","props","for","class","type","placeholder","onChange","Home","useState","users","setUsers","alteredUsers","setAlteredUsers","useEffect","axios","get","then","response","console","log","data","results","catch","err","e","search","target","value","searchResults","filter","user","name","first","toLowerCase","includes","last","location","country","email","scope","onClick","sortedUsers","sort","a","b","direction","id","map","alt","src","picture","medium","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2MAYeA,EAVG,WAChB,OACE,sBAAKC,UAAU,YAAf,UACE,oBAAIA,UAAU,wBAAd,4CAEA,oBAAIA,UAAU,aCMLC,EAXA,SAACC,GACd,OACE,gCACE,uBAAOC,IAAI,kBAAkBC,MAAM,aAAnC,SACE,4EAEF,uBAAOA,MAAM,eAAeC,KAAK,OAAOC,YAAY,oBAAoBC,SAAUL,EAAMK,eCqF/EC,EAzFF,WAAO,IAAD,EACSC,mBAAS,IADlB,mBACVC,EADU,KACHC,EADG,OAEuBF,mBAAS,IAFhC,mBAEVG,EAFU,KAEIC,EAFJ,KAIjBC,qBAAU,WACRC,IACGC,IAAI,yCACJC,MAAK,SAACC,GACLC,QAAQC,IAAIF,EAASG,KAAKC,SAC1BX,EAASO,EAASG,KAAKC,SACvBT,EAAgBK,EAASG,KAAKC,YAE/BC,OAAM,SAACC,GACNL,QAAQC,IAAII,QAEf,IAkCH,OACE,sBAAKxB,UAAU,YAAf,UACE,sBAAKA,UAAU,MAAf,UACE,cAAC,EAAD,IACA,cAAC,EAAD,CAAQO,SApCQ,SAACkB,GACrB,IAAMC,EAASD,EAAEE,OAAOC,MAExB,GAAe,KAAXF,EAAJ,CAIA,IAAMG,EAAgB,YAAInB,GAAOoB,QAAO,SAACC,GACvC,OACEA,EAAKC,KAAKC,MAAMC,cAAcC,SAAST,EAAOQ,gBAC9CH,EAAKC,KAAKI,KAAKF,cAAcC,SAAST,EAAOQ,gBAC7CH,EAAKM,SAASC,QAAQJ,cAAcC,SAAST,EAAOQ,gBACpDH,EAAKQ,MAAMJ,SAAST,EAAOQ,kBAG/BrB,EAAgBgB,QAXdhB,EAAgBH,SAmChB,qBAAKV,UAAU,MAAf,SACE,wBAAOA,UAAU,+BAAjB,UACE,gCACE,+BACE,oBAAIwC,MAAM,MAAV,mBACA,oBAAIA,MAAM,MAAV,mBACA,oBAAIA,MAAM,MAAMC,QA3BL,WACrB,IACMC,EADS,YAAOhC,GACQiC,MAAK,SAACC,EAAGC,GACrC,OAAID,EAAElC,MAAMsB,KAAKI,KAAOS,EAAEnC,MAAMsB,KAAKI,KACR,cAApB1B,EAAMoC,UAA4B,GAAK,EACrCF,EAAElC,MAAMsB,KAAKI,KAAOS,EAAEnC,MAAMsB,KAAKI,KACf,eAApB1B,EAAMoC,WAA8B,EAAI,EAE1C,KAETnC,EAAS+B,GACTvB,QAAQC,IAAIsB,IAgBuCK,GAAG,WAA5C,kBAGA,oBAAIP,MAAM,MAAV,mBACA,oBAAIA,MAAM,MAAV,2BAGJ,kCACG5B,EAAaoC,KAAI,SAACjB,GAAD,OAChB,+BACE,oBAAIS,MAAM,MAAV,SACE,qBAAKS,IAAI,WAAWC,IAAKnB,EAAKoB,QAAQC,WAExC,6BAAKrB,EAAKC,KAAKC,QACf,6BAAKF,EAAKC,KAAKI,OACf,6BAAKL,EAAKQ,QACV,6BAAKR,EAAKM,SAASC,gBATzB,gBC9DKe,MANf,WACE,OACE,cAAC,EAAD,KCKWC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBvC,MAAK,YAAkD,IAA/CwC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCFdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.93f5d1a6.chunk.js","sourcesContent":["import React from \"react\";\n\nconst JumboTron = () => {\n  return (\n    <div className=\"jumbotron\">\n      <h1 className=\"display-4 text-center\">Welcome To Our User Directory!</h1>\n\n      <hr className=\"my-4\" />\n    </div>\n  );\n};\n\nexport default JumboTron;\n","import React from \"react\";\n\nconst Search = (props) => {\n  return (\n    <div>\n      <label for=\"exampleDataList\" class=\"form-label\">\n        <b>Search Users by Name, Email, or Location.</b>\n      </label>\n      <input class=\"form-control\" type=\"text\" placeholder=\"Type to search...\" onChange={props.onChange} />\n    </div>\n  );\n};\n\nexport default Search;\n","import React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport JumboTron from \"../../components/JumboTron/JumboTron\";\nimport Search from \"../../components/Search/Search\";\nconst Home = () => {\n  const [users, setUsers] = useState([]);\n  const [alteredUsers, setAlteredUsers] = useState([]);\n\n  useEffect(() => {\n    axios\n      .get(\"https://randomuser.me/api/?results=20\")\n      .then((response) => {\n        console.log(response.data.results);\n        setUsers(response.data.results);\n        setAlteredUsers(response.data.results);\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  }, []);\n\n  const searchResults = (e) => {\n    const search = e.target.value;\n\n    if (search === \"\") {\n      setAlteredUsers(users);\n      return;\n    }\n    const searchResults = [...users].filter((user) => {\n      return (\n        user.name.first.toLowerCase().includes(search.toLowerCase()) ||\n        user.name.last.toLowerCase().includes(search.toLowerCase()) ||\n        user.location.country.toLowerCase().includes(search.toLowerCase()) ||\n        user.email.includes(search.toLowerCase())\n      );\n    });\n    setAlteredUsers(searchResults);\n  };\n\n  const clickSortUsers = () => {\n    const sortUsers = [...users];\n    const sortedUsers = sortUsers.sort((a, b) => {\n      if (a.users.name.last < b.users.name.last) {\n        return users.direction === \"ascending\" ? 1 : -1;\n      } else if (a.users.name.last > b.users.name.last) {\n        return users.direction === \"descending\" ? -1 : 1;\n      }\n      return 0;\n    });\n    setUsers(sortedUsers);\n    console.log(sortedUsers);\n  };\n\n  return (\n    <div className=\"container\">\n      <div className=\"row\">\n        <JumboTron />\n        <Search onChange={searchResults} />\n      </div>\n\n      <div className=\"row\">\n        <table className=\"table sortable table-striped\">\n          <thead>\n            <tr>\n              <th scope=\"col\">Image</th>\n              <th scope=\"col\">First</th>\n              <th scope=\"col\" onClick={clickSortUsers} id=\"nameSort\">\n                Last\n              </th>\n              <th scope=\"col\">Email</th>\n              <th scope=\"col\">Location</th>\n            </tr>\n          </thead>\n          <tbody>\n            {alteredUsers.map((user) => (\n              <tr>\n                <th scope=\"row\">\n                  <img alt=\"User Pic\" src={user.picture.medium} />\n                </th>\n                <td>{user.name.first}</td>\n                <td>{user.name.last}</td>\n                <td>{user.email}</td>\n                <td>{user.location.country}</td>\n              </tr>\n            ))}\n            ;\n          </tbody>\n        </table>\n      </div>\n    </div>\n  );\n};\n\nexport default Home;\n","import React from \"react\";\n// import { BrowserRouter as Router, Route } from \"react-router-dom\";\nimport Home from \"./containers/Home/Home\"\n\n\nfunction App() {\n  return (\n    <Home />\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}